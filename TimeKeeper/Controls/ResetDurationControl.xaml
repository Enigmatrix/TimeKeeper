<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:tools="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
    x:Class="TimeKeeper.Controls.ResetDurationControl"
    mc:Ignorable="d"
    d:DesignHeight="100" d:DesignWidth="500">
    <Grid>

        <Grid.Resources>

            <Style TargetType="{x:Type tools:IntegerUpDown}">
                <Setter Property="FontFamily" Value="/TimeKeeper;Component/Media/#DS-Digital" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Minimum" Value="0" />
                <Setter Property="Value" Value="0" />
                <Setter Property="ShowButtonSpinner" Value="False" />
                <Setter Property="FormatString" Value="00" />
                <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
                <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
                <EventSetter Event="KeyDown" Handler="CheckIfEnterWasPressed" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <tools:ButtonSpinner x:Name="PART_Spinner"
                                                 AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                                                 BorderBrush="{TemplateBinding BorderBrush}"
                                                 BorderThickness="{TemplateBinding BorderThickness}"
                                                 ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Background="{TemplateBinding Background}" IsTabStop="False"
                                                 ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}">
                                <Viewbox>
                                    <tools:WatermarkTextBox x:Name="PART_TextBox"
                                                            AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                                            AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                                            AcceptsReturn="False" BorderThickness="0"
                                                            Background="{TemplateBinding Background}"
                                                            ContextMenu="{TemplateBinding ContextMenu}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            FontWeight="{TemplateBinding FontWeight}"
                                                            FontStyle="{TemplateBinding FontStyle}"
                                                            FontStretch="{TemplateBinding FontStretch}"
                                                            FontSize="{TemplateBinding FontSize}"
                                                            FontFamily="{TemplateBinding FontFamily}"
                                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            IsTabStop="{TemplateBinding IsTabStop}" MinWidth="20"
                                                            Padding="{TemplateBinding Padding}"
                                                            SelectAllOnGotFocus="{Binding SelectAllOnGotFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                                            TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                            TextWrapping="NoWrap" TabIndex="{TemplateBinding TabIndex}"
                                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Viewbox>
                            </tools:ButtonSpinner>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                                   Value="False" />
                                        <Condition
                                            Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                            Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True" />
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                             Value="True">
                                    <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True" />
                                </DataTrigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="FocusManager.FocusedElement" TargetName="PART_TextBox"
                                            Value="{Binding ElementName=PART_TextBox}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
            </Style>

        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width=".1*" />
            <ColumnDefinition />
            <ColumnDefinition Width=".1*" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <tools:IntegerUpDown Grid.Column="0" Maximum="23" Name="HourControl" />

        <Viewbox Grid.Column="1">
            <TextBlock>:</TextBlock>
        </Viewbox>

        <tools:IntegerUpDown Grid.Column="2" Maximum="59" Name="MinuteControl" />

        <Viewbox Grid.Column="3">
            <TextBlock>:</TextBlock>
        </Viewbox>

        <tools:IntegerUpDown Grid.Column="4" Maximum="59" Name="SecondControl" />
    </Grid>
</UserControl>